# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import user_service_pb2 as user__service__pb2


class UserServiceStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.GetName = channel.unary_unary(
        '/UserService/GetName',
        request_serializer=user__service__pb2.UserId.SerializeToString,
        response_deserializer=user__service__pb2.UserName.FromString,
        )


class UserServiceServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def GetName(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_UserServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'GetName': grpc.unary_unary_rpc_method_handler(
          servicer.GetName,
          request_deserializer=user__service__pb2.UserId.FromString,
          response_serializer=user__service__pb2.UserName.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'UserService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
